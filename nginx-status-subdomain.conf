# Configuration for status.mrvl.net subdomain
server {
    listen 80;
    listen [::]:80;
    server_name status.mrvl.net;

    # Redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name status.mrvl.net;

    # SSL certificates (update paths as needed)
    ssl_certificate /etc/letsencrypt/live/status.mrvl.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/status.mrvl.net/privkey.pem;

    # Point to the same frontend build
    root /var/www/mrvl-frontend/frontend/build;
    index index.html;

    # Force React Router to handle the /status route
    location / {
        # Rewrite root to /status for the React app
        try_files /index.html =404;
    }

    # Handle all routes through React
    location ~* ^.+$ {
        try_files $uri /index.html;
    }

    # API proxy (if needed)
    location /api {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
}
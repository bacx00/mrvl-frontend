{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/hooks/index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s0 = $RefreshSig$(),\n  _s1 = $RefreshSig$();\nimport { useState, useEffect, createContext, useContext, useCallback, useMemo } from 'react';\nimport { API_CONFIG } from '../config';\n\n// API Configuration - Use explicit config\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = API_CONFIG.API_URL; // Use API_URL which includes /api\n\nconsole.log('🔧 API Configuration:', {\n  REACT_APP_BACKEND_URL: process.env.REACT_APP_BACKEND_URL,\n  API_BASE_URL: API_BASE_URL,\n  NODE_ENV: process.env.NODE_ENV,\n  CONFIG: API_CONFIG\n});\n\n// Enhanced API client for Laravel backend - BEARER TOKEN ONLY\nconst api = {\n  async request(endpoint, options = {}) {\n    // Use the API_URL from config which already includes /api\n    let url;\n    if (endpoint.startsWith('/')) {\n      url = `${API_BASE_URL}${endpoint}`;\n    } else {\n      url = `${API_BASE_URL}/${endpoint}`;\n    }\n    const token = localStorage.getItem('authToken');\n    const config = {\n      method: 'GET',\n      mode: 'cors',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n        // Laravel requirement\n        ...(token && {\n          Authorization: `Bearer ${token}`\n        }),\n        ...options.headers\n      },\n      ...options\n    };\n    try {\n      console.log(`🌐 API Request: ${config.method} ${url}`);\n      console.log(`📦 Request Data:`, options.body ? options.body instanceof FormData ? 'FormData' : JSON.parse(options.body) : 'No body');\n      const response = await fetch(url, config);\n      console.log(`📡 Response Status: ${response.status} ${response.statusText}`);\n      console.log(`📋 Response Headers:`, Object.fromEntries(response.headers.entries()));\n\n      // Get response text first to handle both JSON and text responses\n      const responseText = await response.text();\n      console.log(`📄 Raw Response:`, responseText.substring(0, 500));\n\n      // Try to parse as JSON\n      let data;\n      try {\n        data = JSON.parse(responseText);\n      } catch (parseError) {\n        console.warn('⚠️ Non-JSON response received:', responseText.substring(0, 200));\n        throw new Error(`Server returned non-JSON response: ${responseText.substring(0, 100)}`);\n      }\n\n      // Check if response is successful\n      if (!response.ok) {\n        console.error(`❌ HTTP Error ${response.status}:`, data);\n\n        // Create detailed error message\n        let errorMessage = `HTTP ${response.status}`;\n        if (data.message) {\n          errorMessage += `: ${data.message}`;\n        }\n        if (data.errors) {\n          const firstError = Object.values(data.errors)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage += ` - ${firstError[0]}`;\n          }\n        }\n        const error = new Error(errorMessage);\n        error.status = response.status;\n        error.data = data;\n        throw error;\n      }\n      console.log(`✅ API Success:`, data);\n      return data;\n    } catch (error) {\n      console.error(`❌ API Error (${config.method} ${endpoint}):`, error);\n\n      // More specific error messages\n      if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {\n        throw new Error('Unable to connect to server. Please check your connection.');\n      }\n      throw error;\n    }\n  },\n  // FIXED: File uploads using Bearer token only (no CSRF)\n  async postFile(endpoint, formData, options = {}) {\n    console.log('🔐 File upload - using Bearer token only (no CSRF)...');\n    let url;\n    if (endpoint.startsWith('/')) {\n      url = `${API_BASE_URL}${endpoint}`;\n    } else {\n      url = `${API_BASE_URL}/${endpoint}`;\n    }\n    const token = localStorage.getItem('authToken');\n    console.log('🔐 File Upload - Auth Token:', token ? 'Found' : 'Missing');\n    if (!token) {\n      throw new Error('Authentication required. Please log in and try again.');\n    }\n\n    // CRITICAL FIX: Only use Bearer token for file uploads, NO CSRF\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': `Bearer ${token}`,\n      // REMOVED: No CSRF tokens for file uploads\n      ...options.headers\n    };\n    const config = {\n      method: 'POST',\n      mode: 'cors',\n      credentials: 'include',\n      headers,\n      body: formData\n    };\n    try {\n      console.log(`🌐 File Upload Request: ${config.method} ${url}`);\n      console.log(`📦 FormData keys:`, Array.from(formData.keys()));\n      console.log(`📋 Request Headers:`, headers);\n      const response = await fetch(url, config);\n      console.log(`📡 File Upload Response Status: ${response.status} ${response.statusText}`);\n      console.log(`📋 File Upload Response Headers:`, Object.fromEntries(response.headers.entries()));\n      const responseText = await response.text();\n      console.log(`📄 File Upload Raw Response:`, responseText.substring(0, 500));\n\n      // No more CSRF error handling - just check for other errors\n      let data;\n      try {\n        data = JSON.parse(responseText);\n      } catch (parseError) {\n        console.warn('⚠️ File Upload - Non-JSON response received:', responseText.substring(0, 200));\n        throw new Error(`Server returned non-JSON response: ${responseText.substring(0, 100)}`);\n      }\n      if (!response.ok) {\n        console.error(`❌ File Upload HTTP Error ${response.status}:`, data);\n        let errorMessage = `HTTP ${response.status}`;\n        if (data.message) {\n          errorMessage += `: ${data.message}`;\n        }\n        const error = new Error(errorMessage);\n        error.status = response.status;\n        error.data = data;\n        throw error;\n      }\n      console.log(`✅ File Upload Success:`, data);\n      return data;\n    } catch (error) {\n      console.error(`❌ File Upload Error (${endpoint}):`, error);\n      throw error;\n    }\n  },\n  get(endpoint, options = {}) {\n    return this.request(endpoint, {\n      ...options,\n      method: 'GET'\n    });\n  },\n  post(endpoint, data, options = {}) {\n    // Handle FormData for file uploads\n    const isFormData = data instanceof FormData;\n    const config = {\n      ...options,\n      method: 'POST'\n    };\n    if (isFormData) {\n      var _config$headers;\n      // Don't set Content-Type for FormData - browser will set it with boundary\n      (_config$headers = config.headers) === null || _config$headers === void 0 ? true : delete _config$headers['Content-Type'];\n      config.body = data;\n    } else {\n      config.body = JSON.stringify(data);\n    }\n    return this.request(endpoint, config);\n  },\n  put(endpoint, data, options = {}) {\n    return this.request(endpoint, {\n      ...options,\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  },\n  delete(endpoint, options = {}) {\n    return this.request(endpoint, {\n      ...options,\n      method: 'DELETE'\n    });\n  }\n};\n\n// Theme Context\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setTheme] = useState(() => {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('theme') || 'dark';\n    }\n    return 'dark';\n  });\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    localStorage.setItem('theme', newTheme);\n  };\n  useEffect(() => {\n    document.documentElement.className = theme;\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n\n// Auth Context\n_s2(ThemeProvider, \"Si07coL/CwUOPKqS7KB+3YVpmJw=\");\n_c = ThemeProvider;\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s3();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s3(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s4();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const fetchUser = useCallback(async () => {\n    try {\n      const userData = await api.get('/user');\n      const user = userData.user || userData;\n      setUser(user);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Failed to fetch user:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      // Fetch user data if token exists - WITH TIMEOUT for frontend-only mode\n      const initFetchUser = async () => {\n        try {\n          // Add timeout for frontend-only mode\n          const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('timeout')), 3000));\n          const userPromise = api.get('/user');\n          const userData = await Promise.race([userPromise, timeoutPromise]);\n          const user = userData.user || userData;\n          setUser(user);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Failed to fetch user (expected in frontend-only mode):', error);\n          localStorage.removeItem('authToken');\n          setUser(null);\n          setIsAuthenticated(false);\n        } finally {\n          setLoading(false);\n        }\n      };\n      initFetchUser();\n    } else {\n      // No token - set loading to false immediately\n      setLoading(false);\n    }\n  }, []); // No dependencies - only run once on mount\n\n  const login = async (email, password) => {\n    try {\n      console.log('🔑 Attempting login with:', {\n        email\n      });\n      const response = await api.post('/auth/login', {\n        email: email.trim(),\n        password: password\n      });\n      console.log('✅ Login response:', response);\n      if (response.token && response.user) {\n        const token = response.token;\n        const userData = response.user;\n        localStorage.setItem('authToken', token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        console.log('✅ Login successful, user:', userData);\n        return {\n          success: true,\n          user: userData,\n          token\n        };\n      } else {\n        console.error('❌ Invalid response format:', response);\n        throw new Error(response.message || 'Login failed - invalid response format');\n      }\n    } catch (error) {\n      console.error('❌ Login error:', error);\n\n      // Extract meaningful error message\n      let errorMessage = 'Login failed. Please try again.';\n      if (error.message.includes('HTTP 401')) {\n        errorMessage = 'Invalid email or password.';\n      } else if (error.message.includes('HTTP 422')) {\n        errorMessage = 'Please check your email and password format.';\n      } else if (error.message.includes('Unable to connect')) {\n        errorMessage = 'Unable to connect to server. Please check your connection.';\n      } else if (error.message && !error.message.includes('HTTP')) {\n        errorMessage = error.message;\n      }\n      throw new Error(errorMessage);\n    }\n  };\n  const register = async userData => {\n    try {\n      console.log('📝 Attempting registration with:', userData);\n      if (!userData.name || !userData.name.trim()) {\n        throw new Error('Name is required');\n      }\n      if (!userData.email || !userData.email.trim()) {\n        throw new Error('Email is required');\n      }\n      if (!userData.password || userData.password.length < 8) {\n        throw new Error('Password must be at least 8 characters');\n      }\n      if (userData.password !== userData.password_confirmation) {\n        throw new Error('Passwords do not match');\n      }\n      const registrationData = {\n        name: userData.name.trim(),\n        email: userData.email.trim(),\n        password: userData.password,\n        password_confirmation: userData.password_confirmation\n      };\n      console.log('📝 Sending registration data:', registrationData);\n      const response = await api.post('/auth/register', registrationData);\n      console.log('✅ Registration response:', response);\n      if (response.token && response.user) {\n        const token = response.token;\n        const user = response.user;\n        localStorage.setItem('authToken', token);\n        setUser(user);\n        setIsAuthenticated(true);\n        console.log('✅ Registration successful, user:', user);\n        return {\n          success: true,\n          user: user,\n          token\n        };\n      } else {\n        console.error('❌ Invalid response format:', response);\n        throw new Error(response.message || 'Registration failed - invalid response format');\n      }\n    } catch (error) {\n      console.error('❌ Registration error:', error);\n      let errorMessage = 'Registration failed. Please try again.';\n      if (error.message.includes('HTTP 422')) {\n        if (error.data && error.data.errors) {\n          const firstError = Object.values(error.data.errors)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError[0];\n          }\n        } else if (error.data && error.data.message) {\n          errorMessage = error.data.message;\n        }\n      } else if (error.message.includes('HTTP 409')) {\n        errorMessage = 'This email is already registered. Please try signing in.';\n      } else if (error.message.includes('Unable to connect')) {\n        errorMessage = 'Unable to connect to server. Please check your connection.';\n      } else if (error.message && !error.message.includes('HTTP')) {\n        errorMessage = error.message;\n      }\n      throw new Error(errorMessage);\n    }\n  };\n  const logout = async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        await api.post('/auth/logout');\n      }\n    } catch (error) {\n      console.warn('Logout request failed:', error);\n    } finally {\n      localStorage.removeItem('authToken');\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n\n  // FIXED: Handle both array and string roles from Laravel - memoized\n  const isAdmin = useCallback(() => {\n    if (!user) return false;\n    if (Array.isArray(user.roles)) {\n      return user.roles.includes('admin') || user.roles.includes('super_admin');\n    }\n    if (Array.isArray(user.role_names)) {\n      return user.role_names.includes('admin') || user.role_names.includes('super_admin');\n    }\n    return user.role === 'admin' || user.role === 'super_admin';\n  }, [user]);\n  const isModerator = useCallback(() => {\n    if (!user) return false;\n    if (Array.isArray(user.roles)) {\n      return user.roles.includes('moderator') || user.roles.includes('admin') || user.roles.includes('super_admin');\n    }\n    if (Array.isArray(user.role_names)) {\n      return user.role_names.includes('moderator') || user.role_names.includes('admin') || user.role_names.includes('super_admin');\n    }\n    return user.role === 'moderator' || user.role === 'admin' || user.role === 'super_admin';\n  }, [user]);\n\n  // FIXED: Memoize the context value to prevent infinite re-renders\n  const contextValue = useMemo(() => ({\n    user,\n    loading,\n    isAuthenticated,\n    isAdmin,\n    isModerator,\n    login,\n    register,\n    logout,\n    api\n  }), [user, loading, isAuthenticated, isAdmin, isModerator, login, register, logout]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 478,\n    columnNumber: 5\n  }, this);\n};\n\n// Data Hooks with improved error handling and fixed dependencies\n_s4(AuthProvider, \"iTMuMDoi2jmHi2tSF3LjS/uhElI=\");\n_c2 = AuthProvider;\nexport const useTeams = (filters = {}) => {\n  _s5();\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    api\n  } = useAuth();\n  const fetchTeams = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const params = new URLSearchParams();\n      if (filters.region && filters.region !== 'all') {\n        params.append('region', filters.region);\n      }\n      if (filters.sortBy) {\n        params.append('sort_by', filters.sortBy);\n      }\n      const endpoint = `/teams${params.toString() ? `?${params.toString()}` : ''}`;\n      const response = await api.get(endpoint);\n      setTeams(response.data || response);\n    } catch (err) {\n      console.error('Error fetching teams:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api, filters.region, filters.sortBy]);\n  useEffect(() => {\n    fetchTeams();\n  }, [fetchTeams]);\n  return {\n    teams,\n    loading,\n    error\n  };\n};\n_s5(useTeams, \"59yzJ9yOmG2jOqm00ZmmfFwfTWA=\", false, function () {\n  return [useAuth];\n});\nexport const usePlayers = (filters = {}) => {\n  _s6();\n  const [players, setPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    api\n  } = useAuth();\n  const fetchPlayers = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const params = new URLSearchParams();\n      if (filters.team && filters.team !== 'all') {\n        params.append('team', filters.team);\n      }\n      if (filters.role && filters.role !== 'all') {\n        params.append('role', filters.role);\n      }\n      if (filters.region && filters.region !== 'all') {\n        params.append('region', filters.region);\n      }\n      const endpoint = `/players${params.toString() ? `?${params.toString()}` : ''}`;\n      const response = await api.get(endpoint);\n      setPlayers(response.data || response);\n    } catch (err) {\n      console.error('Error fetching players:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api, filters.team, filters.role, filters.region]);\n  useEffect(() => {\n    fetchPlayers();\n  }, [fetchPlayers]);\n  return {\n    players,\n    loading,\n    error\n  };\n};\n_s6(usePlayers, \"cUXitZRjE1yxQE180lPT8BAEAJE=\", false, function () {\n  return [useAuth];\n});\nexport const useMatches = (filters = {}) => {\n  _s7();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    api\n  } = useAuth();\n  const fetchMatches = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const params = new URLSearchParams();\n      if (filters.status && filters.status !== 'all') {\n        params.append('status', filters.status);\n      }\n      if (filters.region && filters.region !== 'all') {\n        params.append('region', filters.region);\n      }\n      if (filters.event && filters.event !== 'all') {\n        params.append('event', filters.event);\n      }\n      const endpoint = `/matches${params.toString() ? `?${params.toString()}` : ''}`;\n      const response = await api.get(endpoint);\n      setMatches(response.data || response);\n    } catch (err) {\n      console.error('Error fetching matches:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api, filters.status, filters.region, filters.event]);\n  useEffect(() => {\n    fetchMatches();\n  }, [fetchMatches]);\n  return {\n    matches,\n    loading,\n    error\n  };\n};\n_s7(useMatches, \"cSGU7xaDjmIt45Dm6jsvqD6j/lY=\", false, function () {\n  return [useAuth];\n});\nexport const useEvents = (filters = {}) => {\n  _s8();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    api\n  } = useAuth();\n  const fetchEvents = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const params = new URLSearchParams();\n      if (filters.status && filters.status !== 'all') {\n        params.append('status', filters.status);\n      }\n      if (filters.region && filters.region !== 'all') {\n        params.append('region', filters.region);\n      }\n      const endpoint = `/events${params.toString() ? `?${params.toString()}` : ''}`;\n      const response = await api.get(endpoint);\n      setEvents(response.data || response);\n    } catch (err) {\n      console.error('Error fetching events:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api, filters.status, filters.region]);\n  useEffect(() => {\n    fetchEvents();\n  }, [fetchEvents]);\n  return {\n    events,\n    loading,\n    error\n  };\n};\n_s8(useEvents, \"xxNPTf7wKd6PTEtCj1lZHZVmvVU=\", false, function () {\n  return [useAuth];\n});\nexport const useRankings = () => {\n  _s9();\n  const [rankings, setRankings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    api\n  } = useAuth();\n  const fetchRankings = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get('/rankings');\n      setRankings(response.data || response);\n    } catch (err) {\n      console.error('Error fetching rankings:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api]);\n  useEffect(() => {\n    fetchRankings();\n  }, [fetchRankings]);\n  return {\n    rankings,\n    loading,\n    error\n  };\n};\n_s9(useRankings, \"X0B4+eoCmwtFBtNE3bOFdi4V1Qw=\", false, function () {\n  return [useAuth];\n});\nexport const useAdminStats = () => {\n  _s0();\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    api,\n    isAdmin\n  } = useAuth();\n  const fetchStats = useCallback(async () => {\n    if (!isAdmin()) return;\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get('/admin/stats');\n      setStats(response);\n    } catch (err) {\n      console.error('Error fetching admin stats:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api, isAdmin]);\n  useEffect(() => {\n    fetchStats();\n  }, [fetchStats]);\n  return {\n    stats,\n    loading,\n    error\n  };\n};\n_s0(useAdminStats, \"/ZXIcvTySILO7V3LrK3NlvF+mEo=\", false, function () {\n  return [useAuth];\n});\nexport const useSearch = query => {\n  _s1();\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    api\n  } = useAuth();\n  const handleSearch = useCallback(async searchQuery => {\n    if (!searchQuery || searchQuery.trim().length < 2) {\n      setResults([]);\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get(`/search?q=${encodeURIComponent(searchQuery)}`);\n      setResults(response.data || response || []);\n    } catch (err) {\n      console.error('Error searching:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api]);\n  useEffect(() => {\n    if (!query || query.trim().length < 2) {\n      setResults([]);\n      return;\n    }\n    const debounceTimer = setTimeout(() => handleSearch(query), 300);\n    return () => clearTimeout(debounceTimer);\n  }, [query, handleSearch]);\n  return {\n    results,\n    loading,\n    error\n  };\n};\n_s1(useSearch, \"JZSTG9ikMIBbXFrSvN6kI7ZucT4=\", false, function () {\n  return [useAuth];\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"ThemeProvider\");\n$RefreshReg$(_c2, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","useContext","useCallback","useMemo","API_CONFIG","jsxDEV","_jsxDEV","API_BASE_URL","API_URL","console","log","REACT_APP_BACKEND_URL","process","env","NODE_ENV","CONFIG","api","request","endpoint","options","url","startsWith","token","localStorage","getItem","config","method","mode","credentials","headers","Authorization","body","FormData","JSON","parse","response","fetch","status","statusText","Object","fromEntries","entries","responseText","text","substring","data","parseError","warn","Error","ok","error","errorMessage","message","errors","firstError","values","Array","isArray","name","includes","postFile","formData","from","keys","get","post","isFormData","_config$headers","stringify","put","delete","ThemeContext","useTheme","_s","context","ThemeProvider","children","_s2","theme","setTheme","window","toggleTheme","newTheme","setItem","document","documentElement","className","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","AuthContext","useAuth","_s3","AuthProvider","_s4","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","fetchUser","userData","logout","initFetchUser","timeoutPromise","Promise","_","reject","setTimeout","userPromise","race","removeItem","login","email","password","trim","success","register","length","password_confirmation","registrationData","isAdmin","roles","role_names","role","isModerator","contextValue","_c2","useTeams","filters","_s5","teams","setTeams","setError","fetchTeams","params","URLSearchParams","region","append","sortBy","toString","err","usePlayers","_s6","players","setPlayers","fetchPlayers","team","useMatches","_s7","matches","setMatches","fetchMatches","event","useEvents","_s8","events","setEvents","fetchEvents","useRankings","_s9","rankings","setRankings","fetchRankings","useAdminStats","_s0","stats","setStats","fetchStats","useSearch","query","_s1","results","setResults","handleSearch","searchQuery","encodeURIComponent","debounceTimer","clearTimeout","$RefreshReg$"],"sources":["/app/frontend/src/hooks/index.js"],"sourcesContent":["import { useState, useEffect, createContext, useContext, useCallback, useMemo } from 'react';\nimport { API_CONFIG } from '../config';\n\n// API Configuration - Use explicit config\nconst API_BASE_URL = API_CONFIG.API_URL; // Use API_URL which includes /api\n\nconsole.log('🔧 API Configuration:', {\n  REACT_APP_BACKEND_URL: process.env.REACT_APP_BACKEND_URL,\n  API_BASE_URL: API_BASE_URL,\n  NODE_ENV: process.env.NODE_ENV,\n  CONFIG: API_CONFIG\n});\n\n// Enhanced API client for Laravel backend - BEARER TOKEN ONLY\nconst api = {\n  async request(endpoint, options = {}) {\n    // Use the API_URL from config which already includes /api\n    let url;\n    if (endpoint.startsWith('/')) {\n      url = `${API_BASE_URL}${endpoint}`;\n    } else {\n      url = `${API_BASE_URL}/${endpoint}`;\n    }\n    \n    const token = localStorage.getItem('authToken');\n    \n    const config = {\n      method: 'GET',\n      mode: 'cors',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest', // Laravel requirement\n        ...(token && { Authorization: `Bearer ${token}` }),\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    try {\n      console.log(`🌐 API Request: ${config.method} ${url}`);\n      console.log(`📦 Request Data:`, options.body ? (options.body instanceof FormData ? 'FormData' : JSON.parse(options.body)) : 'No body');\n      \n      const response = await fetch(url, config);\n      \n      console.log(`📡 Response Status: ${response.status} ${response.statusText}`);\n      console.log(`📋 Response Headers:`, Object.fromEntries(response.headers.entries()));\n      \n      // Get response text first to handle both JSON and text responses\n      const responseText = await response.text();\n      console.log(`📄 Raw Response:`, responseText.substring(0, 500));\n      \n      // Try to parse as JSON\n      let data;\n      try {\n        data = JSON.parse(responseText);\n      } catch (parseError) {\n        console.warn('⚠️ Non-JSON response received:', responseText.substring(0, 200));\n        throw new Error(`Server returned non-JSON response: ${responseText.substring(0, 100)}`);\n      }\n      \n      // Check if response is successful\n      if (!response.ok) {\n        console.error(`❌ HTTP Error ${response.status}:`, data);\n        \n        // Create detailed error message\n        let errorMessage = `HTTP ${response.status}`;\n        if (data.message) {\n          errorMessage += `: ${data.message}`;\n        }\n        if (data.errors) {\n          const firstError = Object.values(data.errors)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage += ` - ${firstError[0]}`;\n          }\n        }\n        \n        const error = new Error(errorMessage);\n        error.status = response.status;\n        error.data = data;\n        throw error;\n      }\n      \n      console.log(`✅ API Success:`, data);\n      return data;\n    } catch (error) {\n      console.error(`❌ API Error (${config.method} ${endpoint}):`, error);\n      \n      // More specific error messages\n      if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {\n        throw new Error('Unable to connect to server. Please check your connection.');\n      }\n      \n      throw error;\n    }\n  },\n\n  // FIXED: File uploads using Bearer token only (no CSRF)\n  async postFile(endpoint, formData, options = {}) {\n    console.log('🔐 File upload - using Bearer token only (no CSRF)...');\n    \n    let url;\n    if (endpoint.startsWith('/')) {\n      url = `${API_BASE_URL}${endpoint}`;\n    } else {\n      url = `${API_BASE_URL}/${endpoint}`;\n    }\n    \n    const token = localStorage.getItem('authToken');\n    \n    console.log('🔐 File Upload - Auth Token:', token ? 'Found' : 'Missing');\n    \n    if (!token) {\n      throw new Error('Authentication required. Please log in and try again.');\n    }\n    \n    // CRITICAL FIX: Only use Bearer token for file uploads, NO CSRF\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': `Bearer ${token}`,\n      // REMOVED: No CSRF tokens for file uploads\n      ...options.headers,\n    };\n    \n    const config = {\n      method: 'POST',\n      mode: 'cors',\n      credentials: 'include',\n      headers,\n      body: formData,\n    };\n\n    try {\n      console.log(`🌐 File Upload Request: ${config.method} ${url}`);\n      console.log(`📦 FormData keys:`, Array.from(formData.keys()));\n      console.log(`📋 Request Headers:`, headers);\n      \n      const response = await fetch(url, config);\n      \n      console.log(`📡 File Upload Response Status: ${response.status} ${response.statusText}`);\n      console.log(`📋 File Upload Response Headers:`, Object.fromEntries(response.headers.entries()));\n      \n      const responseText = await response.text();\n      console.log(`📄 File Upload Raw Response:`, responseText.substring(0, 500));\n      \n      // No more CSRF error handling - just check for other errors\n      let data;\n      try {\n        data = JSON.parse(responseText);\n      } catch (parseError) {\n        console.warn('⚠️ File Upload - Non-JSON response received:', responseText.substring(0, 200));\n        throw new Error(`Server returned non-JSON response: ${responseText.substring(0, 100)}`);\n      }\n      \n      if (!response.ok) {\n        console.error(`❌ File Upload HTTP Error ${response.status}:`, data);\n        \n        let errorMessage = `HTTP ${response.status}`;\n        if (data.message) {\n          errorMessage += `: ${data.message}`;\n        }\n        \n        const error = new Error(errorMessage);\n        error.status = response.status;\n        error.data = data;\n        throw error;\n      }\n      \n      console.log(`✅ File Upload Success:`, data);\n      return data;\n    } catch (error) {\n      console.error(`❌ File Upload Error (${endpoint}):`, error);\n      throw error;\n    }\n  },\n\n  get(endpoint, options = {}) {\n    return this.request(endpoint, { ...options, method: 'GET' });\n  },\n\n  post(endpoint, data, options = {}) {\n    // Handle FormData for file uploads\n    const isFormData = data instanceof FormData;\n    const config = {\n      ...options,\n      method: 'POST',\n    };\n    \n    if (isFormData) {\n      // Don't set Content-Type for FormData - browser will set it with boundary\n      delete config.headers?.['Content-Type'];\n      config.body = data;\n    } else {\n      config.body = JSON.stringify(data);\n    }\n    \n    return this.request(endpoint, config);\n  },\n\n  put(endpoint, data, options = {}) {\n    return this.request(endpoint, {\n      ...options,\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  delete(endpoint, options = {}) {\n    return this.request(endpoint, { ...options, method: 'DELETE' });\n  },\n};\n\n// Theme Context\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(() => {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem('theme') || 'dark';\n    }\n    return 'dark';\n  });\n\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    localStorage.setItem('theme', newTheme);\n  };\n\n  useEffect(() => {\n    document.documentElement.className = theme;\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n// Auth Context\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const fetchUser = useCallback(async () => {\n    try {\n      const userData = await api.get('/user');\n      const user = userData.user || userData;\n      setUser(user);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Failed to fetch user:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      // Fetch user data if token exists - WITH TIMEOUT for frontend-only mode\n      const initFetchUser = async () => {\n        try {\n          // Add timeout for frontend-only mode\n          const timeoutPromise = new Promise((_, reject) => \n            setTimeout(() => reject(new Error('timeout')), 3000)\n          );\n          \n          const userPromise = api.get('/user');\n          const userData = await Promise.race([userPromise, timeoutPromise]);\n          \n          const user = userData.user || userData;\n          setUser(user);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Failed to fetch user (expected in frontend-only mode):', error);\n          localStorage.removeItem('authToken');\n          setUser(null);\n          setIsAuthenticated(false);\n        } finally {\n          setLoading(false);\n        }\n      };\n      initFetchUser();\n    } else {\n      // No token - set loading to false immediately\n      setLoading(false);\n    }\n  }, []); // No dependencies - only run once on mount\n\n  const login = async (email, password) => {\n    try {\n      console.log('🔑 Attempting login with:', { email });\n      \n      const response = await api.post('/auth/login', { \n        email: email.trim(), \n        password: password \n      });\n      \n      console.log('✅ Login response:', response);\n      \n      if (response.token && response.user) {\n        const token = response.token;\n        const userData = response.user;\n        \n        localStorage.setItem('authToken', token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        \n        console.log('✅ Login successful, user:', userData);\n        return { success: true, user: userData, token };\n      } else {\n        console.error('❌ Invalid response format:', response);\n        throw new Error(response.message || 'Login failed - invalid response format');\n      }\n    } catch (error) {\n      console.error('❌ Login error:', error);\n      \n      // Extract meaningful error message\n      let errorMessage = 'Login failed. Please try again.';\n      if (error.message.includes('HTTP 401')) {\n        errorMessage = 'Invalid email or password.';\n      } else if (error.message.includes('HTTP 422')) {\n        errorMessage = 'Please check your email and password format.';\n      } else if (error.message.includes('Unable to connect')) {\n        errorMessage = 'Unable to connect to server. Please check your connection.';\n      } else if (error.message && !error.message.includes('HTTP')) {\n        errorMessage = error.message;\n      }\n      \n      throw new Error(errorMessage);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      console.log('📝 Attempting registration with:', userData);\n      \n      if (!userData.name || !userData.name.trim()) {\n        throw new Error('Name is required');\n      }\n      if (!userData.email || !userData.email.trim()) {\n        throw new Error('Email is required');\n      }\n      if (!userData.password || userData.password.length < 8) {\n        throw new Error('Password must be at least 8 characters');\n      }\n      if (userData.password !== userData.password_confirmation) {\n        throw new Error('Passwords do not match');\n      }\n      \n      const registrationData = {\n        name: userData.name.trim(),\n        email: userData.email.trim(),\n        password: userData.password,\n        password_confirmation: userData.password_confirmation\n      };\n      \n      console.log('📝 Sending registration data:', registrationData);\n      const response = await api.post('/auth/register', registrationData);\n      \n      console.log('✅ Registration response:', response);\n      \n      if (response.token && response.user) {\n        const token = response.token;\n        const user = response.user;\n        \n        localStorage.setItem('authToken', token);\n        setUser(user);\n        setIsAuthenticated(true);\n        \n        console.log('✅ Registration successful, user:', user);\n        return { success: true, user: user, token };\n      } else {\n        console.error('❌ Invalid response format:', response);\n        throw new Error(response.message || 'Registration failed - invalid response format');\n      }\n    } catch (error) {\n      console.error('❌ Registration error:', error);\n      \n      let errorMessage = 'Registration failed. Please try again.';\n      \n      if (error.message.includes('HTTP 422')) {\n        if (error.data && error.data.errors) {\n          const firstError = Object.values(error.data.errors)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError[0];\n          }\n        } else if (error.data && error.data.message) {\n          errorMessage = error.data.message;\n        }\n      } else if (error.message.includes('HTTP 409')) {\n        errorMessage = 'This email is already registered. Please try signing in.';\n      } else if (error.message.includes('Unable to connect')) {\n        errorMessage = 'Unable to connect to server. Please check your connection.';\n      } else if (error.message && !error.message.includes('HTTP')) {\n        errorMessage = error.message;\n      }\n      \n      throw new Error(errorMessage);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        await api.post('/auth/logout');\n      }\n    } catch (error) {\n      console.warn('Logout request failed:', error);\n    } finally {\n      localStorage.removeItem('authToken');\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n\n  // FIXED: Handle both array and string roles from Laravel - memoized\n  const isAdmin = useCallback(() => {\n    if (!user) return false;\n    if (Array.isArray(user.roles)) {\n      return user.roles.includes('admin') || user.roles.includes('super_admin');\n    }\n    if (Array.isArray(user.role_names)) {\n      return user.role_names.includes('admin') || user.role_names.includes('super_admin');\n    }\n    return user.role === 'admin' || user.role === 'super_admin';\n  }, [user]);\n\n  const isModerator = useCallback(() => {\n    if (!user) return false;\n    if (Array.isArray(user.roles)) {\n      return user.roles.includes('moderator') || user.roles.includes('admin') || user.roles.includes('super_admin');\n    }\n    if (Array.isArray(user.role_names)) {\n      return user.role_names.includes('moderator') || user.role_names.includes('admin') || user.role_names.includes('super_admin');\n    }\n    return user.role === 'moderator' || user.role === 'admin' || user.role === 'super_admin';\n  }, [user]);\n\n  // FIXED: Memoize the context value to prevent infinite re-renders\n  const contextValue = useMemo(() => ({\n    user,\n    loading,\n    isAuthenticated,\n    isAdmin,\n    isModerator,\n    login,\n    register,\n    logout,\n    api,\n  }), [user, loading, isAuthenticated, isAdmin, isModerator, login, register, logout]);\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Data Hooks with improved error handling and fixed dependencies\nexport const useTeams = (filters = {}) => {\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { api } = useAuth();\n\n  const fetchTeams = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const params = new URLSearchParams();\n      if (filters.region && filters.region !== 'all') {\n        params.append('region', filters.region);\n      }\n      if (filters.sortBy) {\n        params.append('sort_by', filters.sortBy);\n      }\n      \n      const endpoint = `/teams${params.toString() ? `?${params.toString()}` : ''}`;\n      const response = await api.get(endpoint);\n      setTeams(response.data || response);\n    } catch (err) {\n      console.error('Error fetching teams:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api, filters.region, filters.sortBy]);\n\n  useEffect(() => {\n    fetchTeams();\n  }, [fetchTeams]);\n\n  return { teams, loading, error };\n};\n\nexport const usePlayers = (filters = {}) => {\n  const [players, setPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { api } = useAuth();\n\n  const fetchPlayers = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const params = new URLSearchParams();\n      if (filters.team && filters.team !== 'all') {\n        params.append('team', filters.team);\n      }\n      if (filters.role && filters.role !== 'all') {\n        params.append('role', filters.role);\n      }\n      if (filters.region && filters.region !== 'all') {\n        params.append('region', filters.region);\n      }\n      \n      const endpoint = `/players${params.toString() ? `?${params.toString()}` : ''}`;\n      const response = await api.get(endpoint);\n      setPlayers(response.data || response);\n    } catch (err) {\n      console.error('Error fetching players:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api, filters.team, filters.role, filters.region]);\n\n  useEffect(() => {\n    fetchPlayers();\n  }, [fetchPlayers]);\n\n  return { players, loading, error };\n};\n\nexport const useMatches = (filters = {}) => {\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { api } = useAuth();\n\n  const fetchMatches = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const params = new URLSearchParams();\n      if (filters.status && filters.status !== 'all') {\n        params.append('status', filters.status);\n      }\n      if (filters.region && filters.region !== 'all') {\n        params.append('region', filters.region);\n      }\n      if (filters.event && filters.event !== 'all') {\n        params.append('event', filters.event);\n      }\n      \n      const endpoint = `/matches${params.toString() ? `?${params.toString()}` : ''}`;\n      const response = await api.get(endpoint);\n      setMatches(response.data || response);\n    } catch (err) {\n      console.error('Error fetching matches:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api, filters.status, filters.region, filters.event]);\n\n  useEffect(() => {\n    fetchMatches();\n  }, [fetchMatches]);\n\n  return { matches, loading, error };\n};\n\nexport const useEvents = (filters = {}) => {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { api } = useAuth();\n\n  const fetchEvents = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const params = new URLSearchParams();\n      if (filters.status && filters.status !== 'all') {\n        params.append('status', filters.status);\n      }\n      if (filters.region && filters.region !== 'all') {\n        params.append('region', filters.region);\n      }\n      \n      const endpoint = `/events${params.toString() ? `?${params.toString()}` : ''}`;\n      const response = await api.get(endpoint);\n      setEvents(response.data || response);\n    } catch (err) {\n      console.error('Error fetching events:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api, filters.status, filters.region]);\n\n  useEffect(() => {\n    fetchEvents();\n  }, [fetchEvents]);\n\n  return { events, loading, error };\n};\n\nexport const useRankings = () => {\n  const [rankings, setRankings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { api } = useAuth();\n\n  const fetchRankings = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get('/rankings');\n      setRankings(response.data || response);\n    } catch (err) {\n      console.error('Error fetching rankings:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api]);\n\n  useEffect(() => {\n    fetchRankings();\n  }, [fetchRankings]);\n\n  return { rankings, loading, error };\n};\n\nexport const useAdminStats = () => {\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { api, isAdmin } = useAuth();\n\n  const fetchStats = useCallback(async () => {\n    if (!isAdmin()) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get('/admin/stats');\n      setStats(response);\n    } catch (err) {\n      console.error('Error fetching admin stats:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api, isAdmin]);\n\n  useEffect(() => {\n    fetchStats();\n  }, [fetchStats]);\n\n  return { stats, loading, error };\n};\n\nexport const useSearch = (query) => {\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { api } = useAuth();\n\n  const handleSearch = useCallback(async (searchQuery) => {\n    if (!searchQuery || searchQuery.trim().length < 2) {\n      setResults([]);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get(`/search?q=${encodeURIComponent(searchQuery)}`);\n      setResults(response.data || response || []);\n    } catch (err) {\n      console.error('Error searching:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [api]);\n\n  useEffect(() => {\n    if (!query || query.trim().length < 2) {\n      setResults([]);\n      return;\n    }\n\n    const debounceTimer = setTimeout(() => handleSearch(query), 300);\n    return () => clearTimeout(debounceTimer);\n  }, [query, handleSearch]);\n\n  return { results, loading, error };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
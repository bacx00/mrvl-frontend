{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/utils/imageUtils.js\";\nimport { API_CONFIG } from '../config';\n\n/**\n * CORE IMAGE URL HANDLER - This handles ALL image URLs across the website\n * When backend returns image paths, this converts them to full URLs\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getImageUrl = (imagePath, type = 'general') => {\n  if (!imagePath || imagePath === null || imagePath === undefined || imagePath === '') {\n    // Return appropriate placeholder based on type\n    switch (type) {\n      case 'team-logo':\n        return 'https://images.unsplash.com/photo-1635805737707-575885ab0820?w=80&h=80&fit=crop&crop=center';\n      case 'player-avatar':\n        return 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=80&h=80&fit=crop&crop=center';\n      case 'news-featured':\n        return 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=200&fit=crop';\n      default:\n        return 'https://images.unsplash.com/photo-1517077304055-6e89abbf09b0?w=200&h=200&fit=crop&crop=center';\n    }\n  }\n\n  // CRITICAL FIX: Handle blob URLs from image upload (temporary URLs)\n  if (typeof imagePath === 'string' && imagePath.startsWith('blob:')) {\n    console.warn('üö® Blob URL detected:', imagePath, '- This should be replaced with actual storage URL after upload');\n    return getImageUrl(null, type); // Return placeholder instead of blob URL\n  }\n\n  // CRITICAL FIX: Handle emoji/invalid paths (üî•, üåä, ‚öîÔ∏è, üêç)\n  if (typeof imagePath === 'string' && /[\\u{1F000}-\\u{1F6FF}]|[\\u{1F900}-\\u{1F9FF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]/u.test(imagePath)) {\n    console.warn('üö® Invalid emoji path detected:', imagePath, 'Using fallback');\n    return getImageUrl(null, type); // Return placeholder\n  }\n\n  // If it's already a full URL, check if it needs domain correction\n  if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\n    // CRITICAL FIX: Replace old domain with correct one\n    if (imagePath.includes('1039tfjgievqa983.mrvl.net')) {\n      const correctedUrl = imagePath.replace('https://1039tfjgievqa983.mrvl.net', API_CONFIG.BASE_URL);\n      console.log('üîÑ Correcting old domain URL:', imagePath, '‚Üí', correctedUrl);\n      return correctedUrl;\n    }\n    return imagePath;\n  }\n\n  // CORE FIX: Handle backend storage paths properly\n  // Backend returns paths like: \"teams/logos/filename.jpg\" or \"players/avatars/filename.jpg\"\n  if (imagePath.includes('/')) {\n    // Always add /storage/ prefix for backend file paths\n    const cleanPath = imagePath.startsWith('/') ? imagePath.substring(1) : imagePath;\n\n    // CRITICAL FIX: Handle paths that already include 'storage' vs those that don't\n    if (cleanPath.startsWith('storage/')) {\n      return `${API_CONFIG.BASE_URL}/${cleanPath}`;\n    } else {\n      return `${API_CONFIG.BASE_URL}/storage/${cleanPath}`;\n    }\n  }\n\n  // If it's just a filename, treat as storage path\n  return `${API_CONFIG.BASE_URL}/storage/${imagePath}`;\n};\n\n/**\n * Get team logo URL with proper fallback\n */\n// Enhanced team logo fallback system with Marvel Rivals themed images\nexport const getTeamLogoUrl = team => {\n  console.log('üñºÔ∏è getTeamLogoUrl - Team:', team === null || team === void 0 ? void 0 : team.name, 'Logo path:', team === null || team === void 0 ? void 0 : team.logo);\n\n  // Marvel Rivals team-specific fallbacks for real teams\n  const teamLogos = {\n    'Luminosity Gaming': 'https://images.unsplash.com/photo-1614680376593-902f74cf0d41?w=80&h=80&fit=crop&crop=center',\n    'Fnatic': 'https://images.unsplash.com/photo-1542751371-adc38448a05e?w=80&h=80&fit=crop&crop=center',\n    'OG': 'https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=80&h=80&fit=crop&crop=center',\n    'Sentinels': 'https://images.unsplash.com/photo-1511512578047-dfb367046420?w=80&h=80&fit=crop&crop=center',\n    '100 Thieves': 'https://images.unsplash.com/photo-1635805737707-575885ab0820?w=80&h=80&fit=crop&crop=center',\n    'SHROUD-X': 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=80&h=80&fit=crop&crop=center',\n    'Team Nemesis': 'https://images.unsplash.com/photo-1606107557195-0e29a4b5b4aa?w=80&h=80&fit=crop&crop=center',\n    'FlyQuest': 'https://images.unsplash.com/photo-1585238342024-78d387f4a707?w=80&h=80&fit=crop&crop=center',\n    'Rival Esports': 'https://images.unsplash.com/photo-1552820728-8b83bb6b773f?w=80&h=80&fit=crop&crop=center',\n    'CITADELGG': 'https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=80&h=80&fit=crop&crop=center',\n    'NTMR': 'https://images.unsplash.com/photo-1607734834519-d8576ae60ea6?w=80&h=80&fit=crop&crop=center',\n    'BRR BRR PATAPIM': 'https://images.unsplash.com/photo-1502920917128-1aa500764cbd?w=80&h=80&fit=crop&crop=center',\n    'TEAM1': 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=80&h=80&fit=crop&crop=center',\n    'Al Qadsiah': 'https://images.unsplash.com/photo-1557804506-669a67965ba0?w=80&h=80&fit=crop&crop=center',\n    'Z10': 'https://images.unsplash.com/photo-1580134774403-d6e7aa4e08ee?w=80&h=80&fit=crop&crop=center',\n    'All Buisness': 'https://images.unsplash.com/photo-1590845947698-8924d7409b3b?w=80&h=80&fit=crop&crop=center',\n    'Yoinkada': 'https://images.unsplash.com/photo-1553481187-be93c21490a9?w=80&h=80&fit=crop&crop=center'\n  };\n\n  // Check for specific team logo fallback first\n  if (team !== null && team !== void 0 && team.name && teamLogos[team.name]) {\n    console.log('üñºÔ∏è getTeamLogoUrl - Using specific fallback for:', team.name);\n    return teamLogos[team.name];\n  }\n\n  // Try to use the logo path from backend (if valid)\n  if (team !== null && team !== void 0 && team.logo && typeof team.logo === 'string' && team.logo.length > 0) {\n    // Construct full URL if it's a relative path\n    const baseUrl = 'https://staging.mrvl.net/storage/';\n    const logoUrl = team.logo.startsWith('http') ? team.logo : baseUrl + team.logo;\n    console.log('üñºÔ∏è getTeamLogoUrl - Final URL:', logoUrl);\n    return logoUrl;\n  }\n\n  // Generic Marvel Rivals themed fallback\n  console.log('üñºÔ∏è getTeamLogoUrl - Using generic fallback for:', team === null || team === void 0 ? void 0 : team.name);\n  return 'https://images.unsplash.com/photo-1635805737707-575885ab0820?w=80&h=80&fit=crop&crop=center';\n};\n\n/**\n * Get team flag URL with proper fallback\n */\nexport const getTeamFlagUrl = team => {\n  if (!team) return getImageUrl(null, 'team-logo');\n\n  // FIXED: Check ALL possible flag fields from backend response\n  const flagPath = team.flag_url || team.flagUrl || team.flag;\n  console.log('üñºÔ∏è getTeamFlagUrl - Team:', team.name || team.id, 'Flag path:', flagPath);\n  const finalUrl = getImageUrl(flagPath, 'team-logo');\n  console.log('üñºÔ∏è getTeamFlagUrl - Final URL:', finalUrl);\n  return finalUrl;\n};\n\n/**\n * Get player avatar URL with proper fallback  \n */\nexport const getPlayerAvatarUrl = player => {\n  if (!player) return getImageUrl(null, 'player-avatar');\n\n  // FIXED: Check ALL possible avatar fields from backend response\n  const avatarPath = player.avatar_url || player.avatarUrl || player.avatar;\n  console.log('üñºÔ∏è getPlayerAvatarUrl - Player:', player.name || player.username || player.id, 'Avatar path:', avatarPath);\n  const finalUrl = getImageUrl(avatarPath, 'player-avatar');\n  console.log('üñºÔ∏è getPlayerAvatarUrl - Final URL:', finalUrl);\n  return finalUrl;\n};\n\n/**\n * Get news featured image URL with fallback\n */\nexport const getNewsFeaturedImageUrl = article => {\n  if (!article) return getImageUrl(null, 'news-featured');\n  const imagePath = article.featured_image_url || article.featuredImageUrl || article.image || article.featured_image;\n  return getImageUrl(imagePath, 'news-featured');\n};\n\n/**\n * UNIVERSAL COUNTRY FLAG HELPER - Used everywhere on website\n * Returns country flag emoji for consistent display across all pages\n */\nexport const getCountryFlag = countryCode => {\n  const flagMap = {\n    'US': 'üá∫üá∏',\n    'CA': 'üá®üá¶',\n    'UK': 'üá¨üáß',\n    'DE': 'üá©üá™',\n    'FR': 'üá´üá∑',\n    'ES': 'üá™üá∏',\n    'SE': 'üá∏üá™',\n    'KR': 'üá∞üá∑',\n    'AU': 'üá¶üá∫',\n    'BR': 'üáßüá∑',\n    'JP': 'üáØüáµ',\n    'CN': 'üá®üá≥',\n    'INTL': 'üåç'\n  };\n  return flagMap[countryCode] || 'üåç';\n};\n\n/**\n * UNIVERSAL TEAM LOGO COMPONENT - Used everywhere on website\n * This ensures consistent display across ALL pages\n */\nexport const TeamLogo = ({\n  team,\n  size = 'w-8 h-8',\n  className = ''\n}) => {\n  if (!team) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${size} rounded bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-xs font-bold text-gray-500 dark:text-gray-400 ${className}`,\n      children: \"TEAM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  }\n  const imageUrl = getTeamLogoUrl(team);\n  const teamName = team.name || team.short_name || team.shortName || 'Team';\n  const teamInitials = (team.short_name || team.shortName || teamName).substring(0, 4).toUpperCase();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${size} rounded bg-gray-100 dark:bg-gray-700 overflow-hidden ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: teamName,\n      className: \"w-full h-full object-cover\",\n      onError: e => {\n        console.log('üñºÔ∏è TeamLogo - Image failed to load:', imageUrl, 'for team:', teamName);\n        // Fallback to text placeholder\n        e.target.style.display = 'none';\n        if (e.target.parentNode) {\n          e.target.parentNode.innerHTML = `<div class=\"w-full h-full flex items-center justify-center text-xs font-bold text-gray-500 dark:text-gray-400\">${teamInitials}</div>`;\n        }\n      },\n      onLoad: () => {\n        console.log('üñºÔ∏è TeamLogo - Image loaded successfully:', imageUrl, 'for team:', teamName);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n\n/**\n * UNIVERSAL PLAYER AVATAR COMPONENT - Used everywhere on website  \n * This ensures consistent display across ALL pages\n */\n_c = TeamLogo;\nexport const PlayerAvatar = ({\n  player,\n  size = 'w-8 h-8',\n  className = ''\n}) => {\n  if (!player) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${size} rounded bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-xs font-bold text-gray-500 dark:text-gray-400 ${className}`,\n      children: \"P\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  }\n  const imageUrl = getPlayerAvatarUrl(player);\n  const playerName = player.name || player.username || player.real_name || 'Player';\n  const playerInitials = (player.username || player.name || 'P').substring(0, 2).toUpperCase();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${size} rounded bg-gray-100 dark:bg-gray-700 overflow-hidden ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: playerName,\n      className: \"w-full h-full object-cover\",\n      onError: e => {\n        // More descriptive error logging\n        if (playerName) {\n          console.log('üñºÔ∏è PlayerAvatar - Image failed to load:', imageUrl, 'for player:', playerName);\n        } else {\n          console.log('üñºÔ∏è PlayerAvatar - Image failed to load:', imageUrl, '(no player name)');\n        }\n        // Fallback to text placeholder\n        e.target.style.display = 'none';\n        if (e.target.parentNode) {\n          e.target.parentNode.innerHTML = `<div class=\"w-full h-full flex items-center justify-center text-xs font-bold text-gray-500 dark:text-gray-400\">${playerInitials}</div>`;\n        }\n      },\n      onLoad: () => {\n        console.log('üñºÔ∏è PlayerAvatar - Image loaded successfully:', imageUrl, 'for player:', playerName);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_c2 = PlayerAvatar;\nexport default {\n  getImageUrl,\n  getTeamLogoUrl,\n  getPlayerAvatarUrl,\n  getNewsFeaturedImageUrl,\n  TeamLogo,\n  PlayerAvatar\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"TeamLogo\");\n$RefreshReg$(_c2, \"PlayerAvatar\");","map":{"version":3,"names":["API_CONFIG","jsxDEV","_jsxDEV","getImageUrl","imagePath","type","undefined","startsWith","console","warn","test","includes","correctedUrl","replace","BASE_URL","log","cleanPath","substring","getTeamLogoUrl","team","name","logo","teamLogos","length","baseUrl","logoUrl","getTeamFlagUrl","flagPath","flag_url","flagUrl","flag","id","finalUrl","getPlayerAvatarUrl","player","avatarPath","avatar_url","avatarUrl","avatar","username","getNewsFeaturedImageUrl","article","featured_image_url","featuredImageUrl","image","featured_image","getCountryFlag","countryCode","flagMap","TeamLogo","size","className","children","fileName","_jsxFileName","lineNumber","columnNumber","imageUrl","teamName","short_name","shortName","teamInitials","toUpperCase","src","alt","onError","e","target","style","display","parentNode","innerHTML","onLoad","_c","PlayerAvatar","playerName","real_name","playerInitials","_c2","$RefreshReg$"],"sources":["/app/frontend/src/utils/imageUtils.js"],"sourcesContent":["import { API_CONFIG } from '../config';\n\n/**\n * CORE IMAGE URL HANDLER - This handles ALL image URLs across the website\n * When backend returns image paths, this converts them to full URLs\n */\nexport const getImageUrl = (imagePath, type = 'general') => {\n  if (!imagePath || imagePath === null || imagePath === undefined || imagePath === '') {\n    // Return appropriate placeholder based on type\n    switch (type) {\n      case 'team-logo':\n        return 'https://images.unsplash.com/photo-1635805737707-575885ab0820?w=80&h=80&fit=crop&crop=center';\n      case 'player-avatar':\n        return 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=80&h=80&fit=crop&crop=center';\n      case 'news-featured':\n        return 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=200&fit=crop';\n      default:\n        return 'https://images.unsplash.com/photo-1517077304055-6e89abbf09b0?w=200&h=200&fit=crop&crop=center';\n    }\n  }\n\n  // CRITICAL FIX: Handle blob URLs from image upload (temporary URLs)\n  if (typeof imagePath === 'string' && imagePath.startsWith('blob:')) {\n    console.warn('üö® Blob URL detected:', imagePath, '- This should be replaced with actual storage URL after upload');\n    return getImageUrl(null, type); // Return placeholder instead of blob URL\n  }\n\n  // CRITICAL FIX: Handle emoji/invalid paths (üî•, üåä, ‚öîÔ∏è, üêç)\n  if (typeof imagePath === 'string' && /[\\u{1F000}-\\u{1F6FF}]|[\\u{1F900}-\\u{1F9FF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]/u.test(imagePath)) {\n    console.warn('üö® Invalid emoji path detected:', imagePath, 'Using fallback');\n    return getImageUrl(null, type); // Return placeholder\n  }\n\n  // If it's already a full URL, check if it needs domain correction\n  if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\n    // CRITICAL FIX: Replace old domain with correct one\n    if (imagePath.includes('1039tfjgievqa983.mrvl.net')) {\n      const correctedUrl = imagePath.replace('https://1039tfjgievqa983.mrvl.net', API_CONFIG.BASE_URL);\n      console.log('üîÑ Correcting old domain URL:', imagePath, '‚Üí', correctedUrl);\n      return correctedUrl;\n    }\n    return imagePath;\n  }\n\n  // CORE FIX: Handle backend storage paths properly\n  // Backend returns paths like: \"teams/logos/filename.jpg\" or \"players/avatars/filename.jpg\"\n  if (imagePath.includes('/')) {\n    // Always add /storage/ prefix for backend file paths\n    const cleanPath = imagePath.startsWith('/') ? imagePath.substring(1) : imagePath;\n    \n    // CRITICAL FIX: Handle paths that already include 'storage' vs those that don't\n    if (cleanPath.startsWith('storage/')) {\n      return `${API_CONFIG.BASE_URL}/${cleanPath}`;\n    } else {\n      return `${API_CONFIG.BASE_URL}/storage/${cleanPath}`;\n    }\n  }\n\n  // If it's just a filename, treat as storage path\n  return `${API_CONFIG.BASE_URL}/storage/${imagePath}`;\n};\n\n/**\n * Get team logo URL with proper fallback\n */\n// Enhanced team logo fallback system with Marvel Rivals themed images\nexport const getTeamLogoUrl = (team) => {\n  console.log('üñºÔ∏è getTeamLogoUrl - Team:', team?.name, 'Logo path:', team?.logo);\n  \n  // Marvel Rivals team-specific fallbacks for real teams\n  const teamLogos = {\n    'Luminosity Gaming': 'https://images.unsplash.com/photo-1614680376593-902f74cf0d41?w=80&h=80&fit=crop&crop=center',\n    'Fnatic': 'https://images.unsplash.com/photo-1542751371-adc38448a05e?w=80&h=80&fit=crop&crop=center',\n    'OG': 'https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=80&h=80&fit=crop&crop=center',\n    'Sentinels': 'https://images.unsplash.com/photo-1511512578047-dfb367046420?w=80&h=80&fit=crop&crop=center',\n    '100 Thieves': 'https://images.unsplash.com/photo-1635805737707-575885ab0820?w=80&h=80&fit=crop&crop=center',\n    'SHROUD-X': 'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=80&h=80&fit=crop&crop=center',\n    'Team Nemesis': 'https://images.unsplash.com/photo-1606107557195-0e29a4b5b4aa?w=80&h=80&fit=crop&crop=center',\n    'FlyQuest': 'https://images.unsplash.com/photo-1585238342024-78d387f4a707?w=80&h=80&fit=crop&crop=center',\n    'Rival Esports': 'https://images.unsplash.com/photo-1552820728-8b83bb6b773f?w=80&h=80&fit=crop&crop=center',\n    'CITADELGG': 'https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=80&h=80&fit=crop&crop=center',\n    'NTMR': 'https://images.unsplash.com/photo-1607734834519-d8576ae60ea6?w=80&h=80&fit=crop&crop=center',\n    'BRR BRR PATAPIM': 'https://images.unsplash.com/photo-1502920917128-1aa500764cbd?w=80&h=80&fit=crop&crop=center',\n    'TEAM1': 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=80&h=80&fit=crop&crop=center',\n    'Al Qadsiah': 'https://images.unsplash.com/photo-1557804506-669a67965ba0?w=80&h=80&fit=crop&crop=center',\n    'Z10': 'https://images.unsplash.com/photo-1580134774403-d6e7aa4e08ee?w=80&h=80&fit=crop&crop=center',\n    'All Buisness': 'https://images.unsplash.com/photo-1590845947698-8924d7409b3b?w=80&h=80&fit=crop&crop=center',\n    'Yoinkada': 'https://images.unsplash.com/photo-1553481187-be93c21490a9?w=80&h=80&fit=crop&crop=center'\n  };\n\n  // Check for specific team logo fallback first\n  if (team?.name && teamLogos[team.name]) {\n    console.log('üñºÔ∏è getTeamLogoUrl - Using specific fallback for:', team.name);\n    return teamLogos[team.name];\n  }\n\n  // Try to use the logo path from backend (if valid)\n  if (team?.logo && typeof team.logo === 'string' && team.logo.length > 0) {\n    // Construct full URL if it's a relative path\n    const baseUrl = 'https://staging.mrvl.net/storage/';\n    const logoUrl = team.logo.startsWith('http') ? team.logo : baseUrl + team.logo;\n    \n    console.log('üñºÔ∏è getTeamLogoUrl - Final URL:', logoUrl);\n    return logoUrl;\n  }\n\n  // Generic Marvel Rivals themed fallback\n  console.log('üñºÔ∏è getTeamLogoUrl - Using generic fallback for:', team?.name);\n  return 'https://images.unsplash.com/photo-1635805737707-575885ab0820?w=80&h=80&fit=crop&crop=center';\n};\n\n/**\n * Get team flag URL with proper fallback\n */\nexport const getTeamFlagUrl = (team) => {\n  if (!team) return getImageUrl(null, 'team-logo');\n  \n  // FIXED: Check ALL possible flag fields from backend response\n  const flagPath = team.flag_url || team.flagUrl || team.flag;\n  console.log('üñºÔ∏è getTeamFlagUrl - Team:', team.name || team.id, 'Flag path:', flagPath);\n  \n  const finalUrl = getImageUrl(flagPath, 'team-logo');\n  console.log('üñºÔ∏è getTeamFlagUrl - Final URL:', finalUrl);\n  \n  return finalUrl;\n};\n\n/**\n * Get player avatar URL with proper fallback  \n */\nexport const getPlayerAvatarUrl = (player) => {\n  if (!player) return getImageUrl(null, 'player-avatar');\n  \n  // FIXED: Check ALL possible avatar fields from backend response\n  const avatarPath = player.avatar_url || player.avatarUrl || player.avatar;\n  console.log('üñºÔ∏è getPlayerAvatarUrl - Player:', player.name || player.username || player.id, 'Avatar path:', avatarPath);\n  \n  const finalUrl = getImageUrl(avatarPath, 'player-avatar');\n  console.log('üñºÔ∏è getPlayerAvatarUrl - Final URL:', finalUrl);\n  \n  return finalUrl;\n};\n\n/**\n * Get news featured image URL with fallback\n */\nexport const getNewsFeaturedImageUrl = (article) => {\n  if (!article) return getImageUrl(null, 'news-featured');\n  \n  const imagePath = article.featured_image_url || article.featuredImageUrl || article.image || article.featured_image;\n  return getImageUrl(imagePath, 'news-featured');\n};\n\n/**\n * UNIVERSAL COUNTRY FLAG HELPER - Used everywhere on website\n * Returns country flag emoji for consistent display across all pages\n */\nexport const getCountryFlag = (countryCode) => {\n  const flagMap = {\n    'US': 'üá∫üá∏',\n    'CA': 'üá®üá¶', \n    'UK': 'üá¨üáß',\n    'DE': 'üá©üá™',\n    'FR': 'üá´üá∑',\n    'ES': 'üá™üá∏',\n    'SE': 'üá∏üá™',\n    'KR': 'üá∞üá∑',\n    'AU': 'üá¶üá∫',\n    'BR': 'üáßüá∑',\n    'JP': 'üáØüáµ',\n    'CN': 'üá®üá≥',\n    'INTL': 'üåç'\n  };\n  return flagMap[countryCode] || 'üåç';\n};\n\n/**\n * UNIVERSAL TEAM LOGO COMPONENT - Used everywhere on website\n * This ensures consistent display across ALL pages\n */\nexport const TeamLogo = ({ team, size = 'w-8 h-8', className = '' }) => {\n  if (!team) {\n    return (\n      <div className={`${size} rounded bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-xs font-bold text-gray-500 dark:text-gray-400 ${className}`}>\n        TEAM\n      </div>\n    );\n  }\n  \n  const imageUrl = getTeamLogoUrl(team);\n  const teamName = team.name || team.short_name || team.shortName || 'Team';\n  const teamInitials = (team.short_name || team.shortName || teamName).substring(0, 4).toUpperCase();\n  \n  return (\n    <div className={`${size} rounded bg-gray-100 dark:bg-gray-700 overflow-hidden ${className}`}>\n      <img \n        src={imageUrl}\n        alt={teamName}\n        className=\"w-full h-full object-cover\"\n        onError={(e) => {\n          console.log('üñºÔ∏è TeamLogo - Image failed to load:', imageUrl, 'for team:', teamName);\n          // Fallback to text placeholder\n          e.target.style.display = 'none';\n          if (e.target.parentNode) {\n            e.target.parentNode.innerHTML = `<div class=\"w-full h-full flex items-center justify-center text-xs font-bold text-gray-500 dark:text-gray-400\">${teamInitials}</div>`;\n          }\n        }}\n        onLoad={() => {\n          console.log('üñºÔ∏è TeamLogo - Image loaded successfully:', imageUrl, 'for team:', teamName);\n        }}\n      />\n    </div>\n  );\n};\n\n/**\n * UNIVERSAL PLAYER AVATAR COMPONENT - Used everywhere on website  \n * This ensures consistent display across ALL pages\n */\nexport const PlayerAvatar = ({ player, size = 'w-8 h-8', className = '' }) => {\n  if (!player) {\n    return (\n      <div className={`${size} rounded bg-gray-100 dark:bg-gray-700 flex items-center justify-center text-xs font-bold text-gray-500 dark:text-gray-400 ${className}`}>\n        P\n      </div>\n    );\n  }\n  \n  const imageUrl = getPlayerAvatarUrl(player);\n  const playerName = player.name || player.username || player.real_name || 'Player';\n  const playerInitials = (player.username || player.name || 'P').substring(0, 2).toUpperCase();\n  \n  return (\n    <div className={`${size} rounded bg-gray-100 dark:bg-gray-700 overflow-hidden ${className}`}>\n      <img \n        src={imageUrl}\n        alt={playerName}\n        className=\"w-full h-full object-cover\"\n        onError={(e) => {\n          // More descriptive error logging\n          if (playerName) {\n            console.log('üñºÔ∏è PlayerAvatar - Image failed to load:', imageUrl, 'for player:', playerName);\n          } else {\n            console.log('üñºÔ∏è PlayerAvatar - Image failed to load:', imageUrl, '(no player name)');\n          }\n          // Fallback to text placeholder\n          e.target.style.display = 'none';\n          if (e.target.parentNode) {\n            e.target.parentNode.innerHTML = `<div class=\"w-full h-full flex items-center justify-center text-xs font-bold text-gray-500 dark:text-gray-400\">${playerInitials}</div>`;\n          }\n        }}\n        onLoad={() => {\n          console.log('üñºÔ∏è PlayerAvatar - Image loaded successfully:', imageUrl, 'for player:', playerName);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default {\n  getImageUrl,\n  getTeamLogoUrl,\n  getPlayerAvatarUrl,\n  getNewsFeaturedImageUrl,\n  TeamLogo,\n  PlayerAvatar\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
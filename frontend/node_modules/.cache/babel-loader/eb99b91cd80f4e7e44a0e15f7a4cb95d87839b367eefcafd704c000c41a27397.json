{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/admin/BulkOperationsPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BulkOperationsPanel({\n  api\n}) {\n  _s();\n  var _bulkOperations$find;\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [operationType, setOperationType] = useState('');\n  const [availableData, setAvailableData] = useState({\n    teams: [],\n    players: [],\n    matches: [],\n    events: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    fetchAllData();\n  }, []);\n  const fetchAllData = async () => {\n    try {\n      setLoading(true);\n      const [teamsRes, playersRes, matchesRes, eventsRes] = await Promise.all([api.get('/teams').catch(() => ({\n        data: []\n      })), api.get('/players').catch(() => ({\n        data: []\n      })), api.get('/matches').catch(() => ({\n        data: []\n      })), api.get('/events').catch(() => ({\n        data: []\n      }))]);\n      setAvailableData({\n        teams: teamsRes.data || [],\n        players: playersRes.data || [],\n        matches: matchesRes.data || [],\n        events: eventsRes.data || []\n      });\n    } catch (error) {\n      console.error('❌ Error fetching bulk data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const bulkOperations = [{\n    id: 'delete',\n    label: 'Delete Selected',\n    icon: '🗑️',\n    danger: true\n  }, {\n    id: 'export',\n    label: 'Export to CSV',\n    icon: '📊',\n    safe: true\n  }, {\n    id: 'bulk-edit',\n    label: 'Bulk Edit',\n    icon: '✏️',\n    safe: true\n  }, {\n    id: 'archive',\n    label: 'Archive',\n    icon: '📦',\n    safe: true\n  }, {\n    id: 'activate',\n    label: 'Activate',\n    icon: '✅',\n    safe: true\n  }, {\n    id: 'deactivate',\n    label: 'Deactivate',\n    icon: '❌',\n    safe: true\n  }];\n  const executeBulkOperation = async () => {\n    if (!operationType || selectedItems.length === 0) {\n      alert('Please select items and operation type');\n      return;\n    }\n    const confirmMessage = `Are you sure you want to ${operationType} ${selectedItems.length} items?`;\n    if (!window.confirm(confirmMessage)) return;\n    setLoading(true);\n    setProgress(0);\n    try {\n      const totalItems = selectedItems.length;\n      for (let i = 0; i < selectedItems.length; i++) {\n        const item = selectedItems[i];\n        try {\n          switch (operationType) {\n            case 'delete':\n              await api.delete(`/admin/${item.type}s/${item.id}`);\n              break;\n            case 'archive':\n              await api.put(`/admin/${item.type}s/${item.id}`, {\n                status: 'archived'\n              });\n              break;\n            case 'activate':\n              await api.put(`/admin/${item.type}s/${item.id}`, {\n                status: 'active'\n              });\n              break;\n            case 'deactivate':\n              await api.put(`/admin/${item.type}s/${item.id}`, {\n                status: 'inactive'\n              });\n              break;\n            case 'export':\n              exportToCSV(selectedItems);\n              break;\n            default:\n              console.log('Operation not implemented:', operationType);\n          }\n          setProgress((i + 1) / totalItems * 100);\n        } catch (itemError) {\n          console.error(`❌ Error processing item ${item.id}:`, itemError);\n        }\n      }\n      alert(`✅ Bulk operation ${operationType} completed successfully!`);\n      setSelectedItems([]);\n      setOperationType('');\n      await fetchAllData();\n    } catch (error) {\n      console.error('❌ Bulk operation error:', error);\n      alert(`❌ Bulk operation failed: ${error.message}`);\n    } finally {\n      setLoading(false);\n      setProgress(0);\n    }\n  };\n  const exportToCSV = data => {\n    const csvContent = \"data:text/csv;charset=utf-8,\" + \"Type,ID,Name,Status\\n\" + data.map(item => `${item.type},${item.id},${item.name},${item.status || 'active'}`).join(\"\\n\");\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", `mrvl_bulk_export_${new Date().toISOString().split('T')[0]}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const toggleItemSelection = (item, type) => {\n    const itemWithType = {\n      ...item,\n      type\n    };\n    const isSelected = selectedItems.some(selected => selected.id === item.id && selected.type === type);\n    if (isSelected) {\n      setSelectedItems(prev => prev.filter(selected => !(selected.id === item.id && selected.type === type)));\n    } else {\n      setSelectedItems(prev => [...prev, itemWithType]);\n    }\n  };\n  const selectAllOfType = type => {\n    const typeData = availableData[type] || [];\n    const typeItems = typeData.map(item => ({\n      ...item,\n      type: type.slice(0, -1)\n    }));\n    const allSelected = typeItems.every(item => selectedItems.some(selected => selected.id === item.id && selected.type === item.type));\n    if (allSelected) {\n      setSelectedItems(prev => prev.filter(selected => selected.type !== type.slice(0, -1)));\n    } else {\n      const newSelections = typeItems.filter(item => !selectedItems.some(selected => selected.id === item.id && selected.type === item.type));\n      setSelectedItems(prev => [...prev, ...newSelections]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold text-gray-900 dark:text-white\",\n          children: \"\\u26A1 Bulk Operations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 dark:text-gray-400\",\n          children: \"Manage multiple items efficiently\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-600 dark:text-gray-400\",\n        children: [selectedItems.length, \" items selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold text-gray-900 dark:text-white mb-4\",\n        children: \"Bulk Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2 text-gray-900 dark:text-gray-100\",\n            children: \"Select Operation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: operationType,\n            onChange: e => setOperationType(e.target.value),\n            className: \"form-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choose operation...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), bulkOperations.map(op => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: op.id,\n              children: [op.icon, \" \", op.label]\n            }, op.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: executeBulkOperation,\n            disabled: !operationType || selectedItems.length === 0 || loading,\n            className: `btn w-full ${operationType && (_bulkOperations$find = bulkOperations.find(op => op.id === operationType)) !== null && _bulkOperations$find !== void 0 && _bulkOperations$find.danger ? 'bg-red-600 hover:bg-red-700 text-white' : 'bg-blue-600 hover:bg-blue-700 text-white'} disabled:opacity-50 disabled:cursor-not-allowed`,\n            children: loading ? `Processing... ${Math.round(progress)}%` : 'Execute Operation'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-200 dark:bg-gray-700 rounded-full h-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-600 h-2 rounded-full transition-all duration-500\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: Object.entries(availableData).map(([type, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold text-gray-900 dark:text-white capitalize\",\n            children: [type, \" (\", items.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => selectAllOfType(type),\n            className: \"text-sm text-blue-600 dark:text-blue-400 hover:text-blue-700\",\n            children: items.every(item => selectedItems.some(selected => selected.id === item.id && selected.type === type.slice(0, -1))) ? 'Deselect All' : 'Select All'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2 max-h-64 overflow-y-auto\",\n          children: [items.slice(0, 20).map(item => {\n            const itemType = type.slice(0, -1);\n            const isSelected = selectedItems.some(selected => selected.id === item.id && selected.type === itemType);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-center space-x-3 p-3 rounded-lg cursor-pointer transition-colors ${isSelected ? 'bg-blue-100 dark:bg-blue-900/30 border border-blue-300 dark:border-blue-700' : 'bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600'}`,\n              onClick: () => toggleItemSelection(item, itemType),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: isSelected,\n                onChange: () => {},\n                className: \"text-blue-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-gray-900 dark:text-white\",\n                  children: item.name || item.title || `${itemType} #${item.id}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600 dark:text-gray-400\",\n                  children: [\"ID: \", item.id, \" \\u2022 Status: \", item.status || 'active']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this);\n          }), items.length > 20 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-sm text-gray-600 dark:text-gray-400 py-2\",\n            children: [\"Showing first 20 of \", items.length, \" items\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold text-gray-900 dark:text-white mb-4\",\n        children: \"Quick Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedItems([]),\n          className: \"btn btn-ghost\",\n          children: \"\\uD83D\\uDDD1\\uFE0F Clear Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportToCSV(selectedItems),\n          disabled: selectedItems.length === 0,\n          className: \"btn btn-ghost disabled:opacity-50\",\n          children: \"\\uD83D\\uDCCA Export Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchAllData,\n          className: \"btn btn-ghost\",\n          children: \"\\uD83D\\uDD04 Refresh Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const allItems = Object.entries(availableData).flatMap(([type, items]) => items.map(item => ({\n              ...item,\n              type: type.slice(0, -1)\n            })));\n            setSelectedItems(allItems);\n          },\n          className: \"btn btn-ghost\",\n          children: \"\\u2705 Select All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(BulkOperationsPanel, \"sixJTiM7SONKuo19/qbV1eP61H8=\");\n_c = BulkOperationsPanel;\nexport default BulkOperationsPanel;\nvar _c;\n$RefreshReg$(_c, \"BulkOperationsPanel\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BulkOperationsPanel","api","_s","_bulkOperations$find","selectedItems","setSelectedItems","operationType","setOperationType","availableData","setAvailableData","teams","players","matches","events","loading","setLoading","progress","setProgress","fetchAllData","teamsRes","playersRes","matchesRes","eventsRes","Promise","all","get","catch","data","error","console","bulkOperations","id","label","icon","danger","safe","executeBulkOperation","length","alert","confirmMessage","window","confirm","totalItems","i","item","delete","type","put","status","exportToCSV","log","itemError","message","csvContent","map","name","join","encodedUri","encodeURI","link","document","createElement","setAttribute","Date","toISOString","split","body","appendChild","click","removeChild","toggleItemSelection","itemWithType","isSelected","some","selected","prev","filter","selectAllOfType","typeData","typeItems","slice","allSelected","every","newSelections","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","op","onClick","disabled","find","Math","round","style","width","Object","entries","items","itemType","checked","title","allItems","flatMap","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/admin/BulkOperationsPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction BulkOperationsPanel({ api }) {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [operationType, setOperationType] = useState('');\n  const [availableData, setAvailableData] = useState({\n    teams: [],\n    players: [],\n    matches: [],\n    events: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    fetchAllData();\n  }, []);\n\n  const fetchAllData = async () => {\n    try {\n      setLoading(true);\n      const [teamsRes, playersRes, matchesRes, eventsRes] = await Promise.all([\n        api.get('/teams').catch(() => ({ data: [] })),\n        api.get('/players').catch(() => ({ data: [] })),\n        api.get('/matches').catch(() => ({ data: [] })),\n        api.get('/events').catch(() => ({ data: [] }))\n      ]);\n\n      setAvailableData({\n        teams: teamsRes.data || [],\n        players: playersRes.data || [],\n        matches: matchesRes.data || [],\n        events: eventsRes.data || []\n      });\n    } catch (error) {\n      console.error('❌ Error fetching bulk data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const bulkOperations = [\n    { id: 'delete', label: 'Delete Selected', icon: '🗑️', danger: true },\n    { id: 'export', label: 'Export to CSV', icon: '📊', safe: true },\n    { id: 'bulk-edit', label: 'Bulk Edit', icon: '✏️', safe: true },\n    { id: 'archive', label: 'Archive', icon: '📦', safe: true },\n    { id: 'activate', label: 'Activate', icon: '✅', safe: true },\n    { id: 'deactivate', label: 'Deactivate', icon: '❌', safe: true }\n  ];\n\n  const executeBulkOperation = async () => {\n    if (!operationType || selectedItems.length === 0) {\n      alert('Please select items and operation type');\n      return;\n    }\n\n    const confirmMessage = `Are you sure you want to ${operationType} ${selectedItems.length} items?`;\n    if (!window.confirm(confirmMessage)) return;\n\n    setLoading(true);\n    setProgress(0);\n\n    try {\n      const totalItems = selectedItems.length;\n      \n      for (let i = 0; i < selectedItems.length; i++) {\n        const item = selectedItems[i];\n        \n        try {\n          switch (operationType) {\n            case 'delete':\n              await api.delete(`/admin/${item.type}s/${item.id}`);\n              break;\n            case 'archive':\n              await api.put(`/admin/${item.type}s/${item.id}`, { status: 'archived' });\n              break;\n            case 'activate':\n              await api.put(`/admin/${item.type}s/${item.id}`, { status: 'active' });\n              break;\n            case 'deactivate':\n              await api.put(`/admin/${item.type}s/${item.id}`, { status: 'inactive' });\n              break;\n            case 'export':\n              exportToCSV(selectedItems);\n              break;\n            default:\n              console.log('Operation not implemented:', operationType);\n          }\n          \n          setProgress(((i + 1) / totalItems) * 100);\n        } catch (itemError) {\n          console.error(`❌ Error processing item ${item.id}:`, itemError);\n        }\n      }\n\n      alert(`✅ Bulk operation ${operationType} completed successfully!`);\n      setSelectedItems([]);\n      setOperationType('');\n      await fetchAllData();\n      \n    } catch (error) {\n      console.error('❌ Bulk operation error:', error);\n      alert(`❌ Bulk operation failed: ${error.message}`);\n    } finally {\n      setLoading(false);\n      setProgress(0);\n    }\n  };\n\n  const exportToCSV = (data) => {\n    const csvContent = \"data:text/csv;charset=utf-8,\" \n      + \"Type,ID,Name,Status\\n\"\n      + data.map(item => `${item.type},${item.id},${item.name},${item.status || 'active'}`).join(\"\\n\");\n    \n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", `mrvl_bulk_export_${new Date().toISOString().split('T')[0]}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const toggleItemSelection = (item, type) => {\n    const itemWithType = { ...item, type };\n    const isSelected = selectedItems.some(selected => selected.id === item.id && selected.type === type);\n    \n    if (isSelected) {\n      setSelectedItems(prev => prev.filter(selected => !(selected.id === item.id && selected.type === type)));\n    } else {\n      setSelectedItems(prev => [...prev, itemWithType]);\n    }\n  };\n\n  const selectAllOfType = (type) => {\n    const typeData = availableData[type] || [];\n    const typeItems = typeData.map(item => ({ ...item, type: type.slice(0, -1) }));\n    \n    const allSelected = typeItems.every(item => \n      selectedItems.some(selected => selected.id === item.id && selected.type === item.type)\n    );\n    \n    if (allSelected) {\n      setSelectedItems(prev => prev.filter(selected => selected.type !== type.slice(0, -1)));\n    } else {\n      const newSelections = typeItems.filter(item => \n        !selectedItems.some(selected => selected.id === item.id && selected.type === item.type)\n      );\n      setSelectedItems(prev => [...prev, ...newSelections]);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white\">⚡ Bulk Operations</h2>\n          <p className=\"text-gray-600 dark:text-gray-400\">Manage multiple items efficiently</p>\n        </div>\n        <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n          {selectedItems.length} items selected\n        </div>\n      </div>\n\n      <div className=\"card p-6\">\n        <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-4\">Bulk Actions</h3>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n          <div>\n            <label className=\"block text-sm font-medium mb-2 text-gray-900 dark:text-gray-100\">\n              Select Operation\n            </label>\n            <select\n              value={operationType}\n              onChange={(e) => setOperationType(e.target.value)}\n              className=\"form-input\"\n            >\n              <option value=\"\">Choose operation...</option>\n              {bulkOperations.map(op => (\n                <option key={op.id} value={op.id}>\n                  {op.icon} {op.label}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"flex items-end\">\n            <button\n              onClick={executeBulkOperation}\n              disabled={!operationType || selectedItems.length === 0 || loading}\n              className={`btn w-full ${\n                operationType && bulkOperations.find(op => op.id === operationType)?.danger\n                  ? 'bg-red-600 hover:bg-red-700 text-white'\n                  : 'bg-blue-600 hover:bg-blue-700 text-white'\n              } disabled:opacity-50 disabled:cursor-not-allowed`}\n            >\n              {loading ? `Processing... ${Math.round(progress)}%` : 'Execute Operation'}\n            </button>\n          </div>\n        </div>\n\n        {loading && (\n          <div className=\"mb-4\">\n            <div className=\"bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n              <div \n                className=\"bg-blue-600 h-2 rounded-full transition-all duration-500\"\n                style={{ width: `${progress}%` }}\n              ></div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {Object.entries(availableData).map(([type, items]) => (\n          <div key={type} className=\"card p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-bold text-gray-900 dark:text-white capitalize\">\n                {type} ({items.length})\n              </h3>\n              <button\n                onClick={() => selectAllOfType(type)}\n                className=\"text-sm text-blue-600 dark:text-blue-400 hover:text-blue-700\"\n              >\n                {items.every(item => selectedItems.some(selected => \n                  selected.id === item.id && selected.type === type.slice(0, -1)\n                )) ? 'Deselect All' : 'Select All'}\n              </button>\n            </div>\n            \n            <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n              {items.slice(0, 20).map(item => {\n                const itemType = type.slice(0, -1);\n                const isSelected = selectedItems.some(selected => \n                  selected.id === item.id && selected.type === itemType\n                );\n                \n                return (\n                  <div \n                    key={item.id}\n                    className={`flex items-center space-x-3 p-3 rounded-lg cursor-pointer transition-colors ${\n                      isSelected \n                        ? 'bg-blue-100 dark:bg-blue-900/30 border border-blue-300 dark:border-blue-700'\n                        : 'bg-gray-50 dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600'\n                    }`}\n                    onClick={() => toggleItemSelection(item, itemType)}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={isSelected}\n                      onChange={() => {}}\n                      className=\"text-blue-600\"\n                    />\n                    <div className=\"flex-1\">\n                      <div className=\"font-medium text-gray-900 dark:text-white\">\n                        {item.name || item.title || `${itemType} #${item.id}`}\n                      </div>\n                      <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        ID: {item.id} • Status: {item.status || 'active'}\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              \n              {items.length > 20 && (\n                <div className=\"text-center text-sm text-gray-600 dark:text-gray-400 py-2\">\n                  Showing first 20 of {items.length} items\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"card p-6\">\n        <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-4\">Quick Actions</h3>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <button \n            onClick={() => setSelectedItems([])}\n            className=\"btn btn-ghost\"\n          >\n            🗑️ Clear Selection\n          </button>\n          <button \n            onClick={() => exportToCSV(selectedItems)}\n            disabled={selectedItems.length === 0}\n            className=\"btn btn-ghost disabled:opacity-50\"\n          >\n            📊 Export Selected\n          </button>\n          <button \n            onClick={fetchAllData}\n            className=\"btn btn-ghost\"\n          >\n            🔄 Refresh Data\n          </button>\n          <button \n            onClick={() => {\n              const allItems = Object.entries(availableData).flatMap(([type, items]) => \n                items.map(item => ({ ...item, type: type.slice(0, -1) }))\n              );\n              setSelectedItems(allItems);\n            }}\n            className=\"btn btn-ghost\"\n          >\n            ✅ Select All\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BulkOperationsPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}